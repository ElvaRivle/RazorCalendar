@model IList<Beze>                                              
@{
    ViewData["Title"] = "Home Page";
}

<div id="calendarParentDiv">

    <div class="calendar light">
        <div class="calendar-header">
            <span class="month-picker" id="month-picker">February</span>
            <div class="year-picker">
                <span class="year-change" id="prev-year">
                    <pre><</pre>
                </span>
                <span id="year">2021</span>
                <span class="year-change" id="next-year">
                    <pre>></pre>
                </span>
            </div>
        </div>
        <div class="calendar-body">
            <div class="calendar-week-day">
                <div>Sun</div>
                <div>Mon</div>
                <div>Tue</div>
                <div>Wed</div>
                <div>Thu</div>
                <div>Fri</div>
                <div>Sat</div>
            </div>
            <div class="calendar-days"></div>
        </div>
        <div class="calendar-footer">
        </div>
        <div class="month-list"></div>
    </div>
</div>

@section Scripts {
    <script>
        //copy injected model into javascript upon backend (html/js) code generation
        var model = [];
        @foreach (var item in Model)
        {
            @:model.push({
                @:Kolicina: '@item.Kolicina',
                @:Dan: '@item.Datum.Day',
                @:Mjesec: '@item.Datum.Month',
                @:Godina: '@item.Datum.Year'
            @:});
        }

        model.forEach((item, index) => {
            console.log(item)
        })

        let calendar = document.querySelector('.calendar')

        const month_names = ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Juni', 'Juli', 'August', 'September', 'Oktobar', 'Novembar', 'Decembar']

        isLeapYear = (year) => {
            return (year % 4 === 0 && year % 100 !== 0 && year % 400 !== 0) || (year % 100 === 0 && year % 400 === 0)
        }

        getFebDays = (year) => {
            return isLeapYear(year) ? 29 : 28
        }

        generateCalendar = (month, year) => {
            //debugger;
            let calendar_days = calendar.querySelector('.calendar-days')
            let calendar_header_year = calendar.querySelector('#year')

            let days_of_month = [31, getFebDays(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

            calendar_days.innerHTML = ''

            let currDate = new Date();
            if (month < 0 || month > 11) month = currDate.getMonth()
            if (!year) year = currDate.getFullYear()

            let curr_month = `${month_names[month]}`
            month_picker.innerHTML = curr_month
            calendar_header_year.innerHTML = year

            // get first day of month

            let first_day = new Date(year, month, 1)
            let dayCounter = 1;

            for (let i = 0; i < days_of_month[month] + first_day.getDay(); i++) {
                let day = document.createElement('div')
                if (i >= first_day.getDay()) {
                    day.classList.add('calendar-day-hover')
                    day.innerHTML = dayCounter;
                    dayCounter++;
                    day.innerHTML += `<span></span>
                            <span></span>
                            <span></span>
                            <span></span>`

                    /*
                    if (i - first_day.getDay() + 1 === currDate.getDate() && year === currDate.getFullYear() && month === currDate.getMonth()) {
                        day.classList.add('curr-date')
                        day.classList.remove('curr-date-pravi')
                    }
                    */
                    model.forEach((item, index) => {
                        if (item.Dan == dayCounter-1 && item.Mjesec - 1 == month && item.Godina == year) {
                            if (item.Kolicina < 0) {
                                day.classList.add('lose')
                            }
                            else if (item.Kolicina > 0) {
                                day.classList.add('dobro')
                            }
                            else {
                                day.classList.add('srednje');
                            }
                        }
                    })
                }
                calendar_days.appendChild(day)
            }
        }

        let month_list = calendar.querySelector('.month-list')

        month_names.forEach((e, index) => {
            let month = document.createElement('div')
            month.innerHTML = `<div data-month="${index}">${e}</div>`
            month.querySelector('div').onclick = () => {
                month_list.classList.remove('show')
                curr_month.value = index
                generateCalendar(index, curr_year.value)
            }
            month_list.appendChild(month)
        })

        let month_picker = calendar.querySelector('#month-picker')

        month_picker.onclick = () => {
            month_list.classList.add('show')
        }

        let currDate = new Date();

        let curr_month = { value: currDate.getMonth() }
        let curr_year = { value: currDate.getFullYear() }

        generateCalendar(curr_month.value, curr_year.value)

        document.querySelector('#prev-year').onclick = () => {
            --curr_year.value
            generateCalendar(curr_month.value, curr_year.value)
        }

        document.querySelector('#next-year').onclick = () => {
            ++curr_year.value
            generateCalendar(curr_month.value, curr_year.value)
        }
    </script>
}